resources:
  - name: govwifi-admin
    type: git
    source:
      uri: "https://github.com/alphagov/govwifi-admin.git"
      branch: master

  - name: ecr
    type: docker-image
    source:
      repository: "((deploy-repository))/govwifi/admin"
      tag: concourse-latest
      aws_access_key_id: ((deploy-access-key-id))
      aws_secret_access_key: ((deploy-secret-access-key))

  - name: runner
    # See https://github.com/alphagov/govwifi-concourse-runner for a reference dockerfile
    # readonly_private_ecr_repo_url is provided by the hosted Concourse
    type: docker-image
    source:
      repository: "((readonly_private_ecr_repo_url))"
      tag: concourse-runner-latest

  - name: mysql-image
    type: registry-image
    source:
      repository: mysql
      tag: '5.7'

  - name: ruby-image
    type: registry-image
    source:
      repository: ruby
      tag: '2.6.2'

  - name: nginx-image
    type: registry-image
    source:
      repository: nginx
      tag: alpine

groups:
  - name: test
    jobs:
      - lint & test
  - name: push
    jobs:
      - Push Image
  - name: staging
    jobs:
      - migrate staging
      - deploy staging
  - name: production
    jobs:
      - Confirm deploy to production
      - migrate production
      - deploy production

jobs:
  - name: lint & test
    interruptible: true
    plan:
      - aggregate:
        - get: govwifi-admin
          trigger: true
        - get: mysql-image
          params: {format: oci}
        - get: ruby-image
          params: {format: oci}
        - get: nginx-image
          params: {format: oci}
        - get: runner
      - task: pre-build
        privileged: true
        file: govwifi-admin/ci/tasks/pre-build.yml
        image: runner
      - aggregate:
        - task: lint
          privileged: true
          file: govwifi-admin/ci/tasks/lint.yml
          image: runner
        - task: test
          privileged: true
          file: govwifi-admin/ci/tasks/test.yml
          image: runner

  - name: Push Image
    interruptible: true
    serial_groups: [push-image]
    plan:
      - get: govwifi-admin
        trigger: true
        passed: ['lint & test']
      - put: ecr
        params:
          build: govwifi-admin
          build_args:
            BUNDLE_INSTALL_FLAGS: '--without test development'
        get_params:
          skip_download: true

  - name: migrate staging
    serial_groups:
      - push-image
      - deploy-staging
    plan:
      - get: govwifi-admin
        trigger: true
        passed: ['Push Image']
      - get: runner
      - task: 'migrate'
        file: govwifi-admin/ci/tasks/migrate.yml
        image: runner
        params:
          DEPLOY_STAGE: staging
          AWS_ACCESS_KEY_ID: ((deploy-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((deploy-secret-access-key))
          AWS_DEFAULT_REGION: ((deploy-region))

  - name: deploy staging
    serial_groups:
      - push-image
      - deploy-staging
    plan:
      - get: govwifi-admin
        passed: [migrate staging]
        trigger: true
      - get: runner
      - task: deploy staging
        image: runner
        file: govwifi-admin/ci/tasks/deploy.yml
        params:
          AWS_ACCESS_KEY_ID: ((deploy-access-key-id))
          AWS_DEFAULT_REGION: ((deploy-region))
          AWS_SECRET_ACCESS_KEY: ((deploy-secret-access-key))
          DEPLOY_STAGE: staging

  - name: Confirm deploy to production
    interruptible: true
    serial_groups:
      - push-image
      - deploy-production
    plan:
      - get: govwifi-admin
        passed: [deploy staging]

  - name: migrate production
    serial_groups:
      - push-image
      - deploy-production
    plan:
      - get: govwifi-admin
        passed: [Confirm deploy to production]
        trigger: true
      - get: runner
      - task: migrate
        file: govwifi-admin/ci/tasks/migrate.yml
        image: runner
        params:
          AWS_ACCESS_KEY_ID: ((deploy-access-key-id))
          AWS_DEFAULT_REGION: ((deploy-region))
          AWS_SECRET_ACCESS_KEY: ((deploy-secret-access-key))
          DEPLOY_STAGE: production

  - name: deploy production
    serial_groups:
      - push-image
      - deploy-production
    plan:
      - get: govwifi-admin
        passed: [migrate production]
        trigger: true
      - get: runner
      - task: deploy staging
        file: govwifi-admin/ci/tasks/deploy.yml
        image: runner
        params:
          AWS_ACCESS_KEY_ID: ((deploy-access-key-id))
          AWS_DEFAULT_REGION: ((deploy-region))
          AWS_SECRET_ACCESS_KEY: ((deploy-secret-access-key))
          DEPLOY_STAGE: production
